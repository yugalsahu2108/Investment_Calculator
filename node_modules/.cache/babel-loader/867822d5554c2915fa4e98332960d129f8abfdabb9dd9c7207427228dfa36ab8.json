{"ast":null,"code":"var _jsxFileName = \"/Users/yugalsahu/Desktop/React_Scratch/InvestmentCalculator/src/components/Result.jsx\";\nimport { calculateInvestmentResults, formatter } from \"../util/investment.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result(_ref) {\n  let {\n    input\n  } = _ref;\n  const resultData = calculateInvestmentResults(input);\n  const initialInvestment = resultData[0].valueEndOfYear - resultData[0].interest - resultData[0].annualInvestment;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Investment Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: resultData.map(yearData => {\n        const totalInterest = yearData.valueEndOfYear - yearData.annualInvestment * yearData.year - initialInvestment;\n        const totalAmountInvested = yearData.valueEndOfYear - totalInterest;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.valueEndOfYear)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.interest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(totalInterest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(totalAmountInvested)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, yearData.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["calculateInvestmentResults","formatter","jsxDEV","_jsxDEV","Result","_ref","input","resultData","initialInvestment","valueEndOfYear","interest","annualInvestment","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","yearData","totalInterest","year","totalAmountInvested","format","_c","$RefreshReg$"],"sources":["/Users/yugalsahu/Desktop/React_Scratch/InvestmentCalculator/src/components/Result.jsx"],"sourcesContent":["import { calculateInvestmentResults, formatter } from \"../util/investment.js\";\n\nexport default function Result({ input }) {\n  const resultData = calculateInvestmentResults(input);\n  const initialInvestment =\n    resultData[0].valueEndOfYear -\n    resultData[0].interest -\n    resultData[0].annualInvestment;\n  return (\n    <table id=\"result\">\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Investment Year</th>\n          <th>Interest (year)</th>\n          <th>Total Interest</th>\n          <th>Invested Capital</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {resultData.map((yearData) => {\n          const totalInterest =\n            yearData.valueEndOfYear -\n            yearData.annualInvestment * yearData.year -\n            initialInvestment;\n\n          const totalAmountInvested = yearData.valueEndOfYear - totalInterest;\n\n          return (\n            <tr key={yearData.year}>\n              <td>{yearData.year}</td>\n              <td>{formatter.format(yearData.valueEndOfYear)}</td>\n              <td>{formatter.format(yearData.interest)}</td>\n              <td>{formatter.format(totalInterest)}</td>\n              <td>{formatter.format(totalAmountInvested)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}